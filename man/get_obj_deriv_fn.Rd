% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stacking-estimation.R
\name{get_obj_deriv_fn}
\alias{get_obj_deriv_fn}
\title{A factory-esque arrangement (not sure if there is an actual name for this
pattern) to manufacture an function to calculate first and second order
derivatives of the log-score objective, with needed quantities
accessible in its parent environment.  We do this becaues there's no way to
use the info attribute of the dtrain object to store the component model
log scores (as would be standard in the xgboost package).  But we need to
ensure that the objective function has access to these log scores when
called in parallel.}
\usage{
get_obj_deriv_fn(component_model_log_scores, dtrain_Rmatrix)
}
\arguments{
\item{component_model_log_scores}{N by M matrix where entry [i, m] has the
log-score for observation i obtained from component model m}
}
\value{
a function that takes two arguments (preds and dtrain) and computes
  the first and second order derivatives of the log-score objective function
  for the stacked model.  i.e., it converts preds to model weights for each
  component model m at each observation i and then combines the component
  model log scores with those weights to obtain stacked model log scores.
  See the package vignette for derivations of these calculations.  This
  function is suitable for use as the "obj" function in a call to
  xgboost::xgb.train
}
\description{
A factory-esque arrangement (not sure if there is an actual name for this
pattern) to manufacture an function to calculate first and second order
derivatives of the log-score objective, with needed quantities
accessible in its parent environment.  We do this becaues there's no way to
use the info attribute of the dtrain object to store the component model
log scores (as would be standard in the xgboost package).  But we need to
ensure that the objective function has access to these log scores when
called in parallel.
}

